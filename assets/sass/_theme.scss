// ==========================================================================
// SMACSS - Theme Scss
// A theme defines colours and images that give your application or site its look and feel.
// Separating the theme out into its own set of styles allows for those styles to be easily redefined for alternate themes.
// https://smacss.com/book/type-theme
// ==========================================================================

/**
 * COLORS
 */

$color-text : #757575;
$color-link : #757575;

$primary : white;
$secondary : #1d3d86;
$secondary-transparence : rgba(29,65,135, 0.55);

$font-family-default : 'Roboto';
$font-family-display : $font-family-default;
$font-size:48px;

/**
 * BREAKPOINTS
 */

$tablet-width: 768px;
$desktop-width: 1024px;
$phone-width: 320px;

@mixin tablet {
  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

@mixin phone {
  @media (max-width: #{$tablet-width - 1px}) {
    @content;
  }
}

@mixin media-max($max-width){
  @media (max-width: $max-width) {
    @content;
  }
}

@mixin light-border {
  -moz-box-shadow: 1px 1px 1px 0px #ebecf0;
  -webkit-box-shadow: 0px 0px 0px 0px #ebecf0;
  -o-box-shadow: 1px 1px 1px 0px #ebecf0;
  box-shadow: 1px 1px 1px 1px #ebecf0;
  filter:progid:DXImageTransform.Microsoft.Shadow(color=#ebecf0, Direction=134, Strength=1);
}

@mixin opacitify {
   &{
      background-color: #1abc9c;
      -webkit-transition: .3s ease-in-out;
      transition: .3s ease-in-out;
      opacity: .7;
    }
    &:hover{
      opacity: 1;
    }
}

@mixin borderize($color)
{
  width: 55%;
  min-width: 150px;
  border-right : solid 2px $color;
  @include phone {
    width: 100%;
  }
}

@mixin read-more {
	color: $secondary;
	font-weight: 600;
	padding: 10px;
	float: right;
	text-decoration: none;
	span {
		display: inline-block;
		vertical-align: middle;
		height: 34px;
	}
}

@mixin box_shadow ($level) {
    @if $level == 1 {
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    } @else if $level == 2 {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    } @else if $level == 3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    } @else if $level == 4 {
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    } @else if $level == 5 {
        box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
    }
}

@mixin roundedImg($px: 100px) {
  -webkit-border-radius: $px;
  -moz-border-radius: $px;
  border-radius: $px;
  width: $px;
  height: $px;
}

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

/*
  Display {numPerRow} elements by row, with a margin-right of {margin} in percent
 */
@mixin rowMachine($numPerRow, $margin) {
  width: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);
  &:nth-child(n) {
    margin-bottom: $margin;
    margin-right: $margin;
  }
  &:nth-child(#{$numPerRow}n) {
    margin-right: 0;
    margin-bottom: 0;
  }
}

@mixin centerer($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}
